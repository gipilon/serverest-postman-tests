{
	"info": {
		"_postman_id": "3866688d-48c4-4c4a-8820-bfb0d8951c0d",
		"name": "Testes ServeRest - Usuários",
		"description": "StartFragment\n\n- `Testes para os endpoints de usuários da API ServeRest`\n    \n\nEndFragment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44479652",
		"_collection_link": "https://giovanna-9110139.postman.co/workspace/Estudos-EBAC~4ab40923-d444-4d83-abe1-1d864f85b083/collection/44479652-3866688d-48c4-4c4a-8820-bfb0d8951c0d?action=share&source=collection_link&creator=44479652"
	},
	"item": [
		{
			"name": "Positivo",
			"item": []
		},
		{
			"name": "Negativo",
			"item": [
				{
					"name": "Tentar cadastrar um email ja existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Asserção 1: Verifica se o status code de erro é 400 (Bad Request)\r",
									"pm.test(\"Status code é 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuarios",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excluir um usuário que não existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Asserção 1: Verifica se o status code é 200 (a API ServeRest retorna 200 mesmo sem encontrar)\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Asserção 2: Verifica a mensagem de que nenhum registro foi excluído\r",
									"pm.test(\"Verifica a mensagem 'Nenhum registro excluído'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Nenhum registro excluído\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuarios/idInvalido123",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios",
								"idInvalido123"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cadastrar um novo usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Asserção 1: Verifica se o status code da resposta é 201 (Created)\r",
							"pm.test(\"Status code é 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// Asserção 2: Verifica a mensagem de sucesso\r",
							"pm.test(\"Verifica a mensagem 'Cadastro realizado com sucesso'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Cadastro realizado com sucesso\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Giovanna Pilon\",\r\n  \"email\": \"giovannapilon@qa.com\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/usuarios",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar usuários cadastrados",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Asserção: Verifica se o status code da resposta é 200 (OK)\r",
							"pm.test(\"Status code é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/usuarios",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar um usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Asserção 1: Verifica se o status code é 200 (OK)\r",
							"pm.test(\"Status code é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Asserção 2: Verifica a mensagem de sucesso\r",
							"pm.test(\"Verifica a mensagem 'Registro alterado com sucesso'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Registro alterado com sucesso\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Giovanna Pilon Editada\",\r\n  \"email\": \"giovannapilon.editada@qa.com\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/usuarios/JAY5BAaFKUG8QD86",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"usuarios",
						"JAY5BAaFKUG8QD86"
					]
				}
			},
			"response": []
		}
	]
}